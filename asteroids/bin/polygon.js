// Generated by CoffeeScript 1.7.1
(function() {
  var Polygon, _ref;

  this.App = (_ref = window.App) != null ? _ref : {};

  Polygon = (function() {
    function Polygon(points) {
      this.points = points.slice(0);
    }

    Polygon.prototype.rotate = function(theta) {
      var cos, i, sin, x, y, _i, _ref1, _results;
      cos = Math.cos(theta);
      sin = Math.sin(theta);
      _results = [];
      for (i = _i = 0, _ref1 = this.points.length; _i < _ref1; i = _i += 2) {
        x = this.points[i];
        y = this.points[i + 1];
        this.points[i] = cos * x - sin * y;
        _results.push(this.points[i + 1] = sin * x + cos * y);
      }
      return _results;
    };

    Polygon.prototype.scale = function(c) {
      var i, _i, _ref1, _results;
      _results = [];
      for (i = _i = 0, _ref1 = this.points.length; 0 <= _ref1 ? _i < _ref1 : _i > _ref1; i = 0 <= _ref1 ? ++_i : --_i) {
        _results.push(this.points[i] = this.points[i] * c);
      }
      return _results;
    };

    Polygon.prototype.hasPoint = function(ox, oy, x, y) {
      var c, cond1, cond2, i, j, p, px1, px2, py1, py2, _i, _ref1;
      p = this.points;
      c = false;
      j = p.length - 2;
      for (i = _i = 0, _ref1 = p.length; _i < _ref1; i = _i += 2) {
        px1 = p[i] + ox;
        px2 = p[j] + ox;
        py1 = p[i + 1] + oy;
        py2 = p[j + 1] + oy;
        cond1 = (py1 > y) !== (py2 > y);
        cond2 = x < (px2 - px1) * (y - py1) / (py2 - py1) + px1;
        if (cond1 && cond2) {
          c = !c;
        }
        j = i;
      }
      return c;
    };

    return Polygon;

  })();

  this.App.Polygon = Polygon;

}).call(this);
