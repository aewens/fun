// Generated by CoffeeScript 1.7.1
(function() {
  var B, f,
    __slice = [].slice;

  B = function() {
    var args, fn;
    fn = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    return new B.init(fn, args);
  };

  B.init = function(fn, args) {
    this.val = false;
    args.push(this);
    fn.apply(this, args);
    return this;
  };

  B.fn = B.prototype = {
    on: function(value, expect) {
      if (value === expect) {
        this.t();
      }
      return this;
    },
    run: function() {
      var args, fn;
      fn = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      if (this.val) {
        return fn.apply(null, args);
      }
    },
    neg: function() {
      this.val = !this.val;
      return this;
    },
    t: function() {
      this.val = true;
      return this;
    },
    f: function() {
      this.val = false;
      return this;
    }
  };

  B.init.prototype = B.fn;

  f = function(a, b, c) {
    c.neg().f();
    return B.fn.on(a + b, 3).run(console.log, c.t().neg());
  };

  B(f, 1, 2);

}).call(this);
